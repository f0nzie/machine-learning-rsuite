% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw-methods.R
\name{draw.evaluated_smooth}
\alias{draw.evaluated_smooth}
\alias{draw.evaluated_1d_smooth}
\alias{draw.evaluated_2d_smooth}
\alias{draw.evaluated_re_smooth}
\title{Plot estimated smooths}
\usage{
\method{draw}{evaluated_1d_smooth}(object, xlab, ylab, title = NULL,
  subtitle = NULL, caption = NULL, ...)

\method{draw}{evaluated_2d_smooth}(object, show = c("estimate", "se"),
  contour = TRUE, xlab, ylab, title = NULL, subtitle = NULL,
  caption = NULL, ...)

\method{draw}{evaluated_re_smooth}(object, qq_line = TRUE, xlab, ylab,
  title = NULL, subtitle = NULL, caption = NULL, ...)
}
\arguments{
\item{object}{an object, the result of a call to \code{\link[=evaluate_smooth]{evaluate_smooth()}}.}

\item{xlab}{character or expression; the label for the x axis. If not
supplied, a suitable label will be generated from \code{object}.}

\item{ylab}{character or expression; the label for the y axis. If not
supplied, a suitable label will be generated from \code{object}.}

\item{title}{character or expression; the title for the plot. See
\code{\link[ggplot2:labs]{ggplot2::labs()}}.}

\item{subtitle}{character or expression; the subtitle for the plot. See
\code{\link[ggplot2:labs]{ggplot2::labs()}}.}

\item{caption}{character or expression; the plot caption. See
\code{\link[ggplot2:labs]{ggplot2::labs()}}.}

\item{...}{arguments passed to other methods.}

\item{show}{character; plot the estimated smooth (\code{"estimate"}) or its
standard error (\code{"se"}).}

\item{contour}{logical; should contours be draw on the plot using
\code{\link[ggplot2:geom_contour]{ggplot2::geom_contour()}}.}

\item{qq_line}{logical; draw a reference line through the lower and upper
theoretical quartiles.}
}
\value{
A \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} object.
}
\description{
Plots estimated univariate and bivariate smooths using ggplot2.
}
\examples{
library("mgcv")

set.seed(2)
dat <- gamSim(1, n = 400, dist = "normal", scale = 2)
m1 <- gam(y ~ s(x0) + s(x1) + s(x2) + s(x3), data = dat, method = "REML")

sm <- evaluate_smooth(m1, "s(x2)")
draw(sm)

set.seed(2)
dat <- gamSim(2, n = 4000, dist = "normal", scale = 1)
m2 <- gam(y ~ s(x, z, k = 40), data = dat$data, method = "REML")

sm <- evaluate_smooth(m2, "s(x,z)", n = 100)
draw(sm)

## now the standard error the smooth instead
draw(sm, show = "se")
}
\author{
Gavin L. Simpson
}
